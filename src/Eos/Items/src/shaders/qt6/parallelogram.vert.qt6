#version 440
// Copyright (c) 2014-2021 LG Electronics, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// SPDX-License-Identifier: Apache-2.0

precision highp float;

layout(location = 0) in highp vec2 vertex;
layout(location = 1) in highp vec2 texture0;
layout(location = 2) in highp float coverage;

layout(location = 0) out highp vec2 qt_TexCoord0;
layout(location = 1) out highp vec2 qt_TexCoord1;
layout(location = 2) out highp float vcoverage;

layout(std140, binding = 0) uniform buf
{
    mat4 qt_Matrix;
    float qt_Opacity;
    vec4 color;
    float xScale;
    float yScale;
    vec4 dest;
    vec4 sourceSubRect;
    int rotation;
};

void main() {
    gl_Position = qt_Matrix * vec4(vertex.xy,0.0, 1.0);
    qt_TexCoord0 = sourceSubRect.xy + sourceSubRect.zw * ((vertex.xy - dest.xy) / dest.zw);
    vcoverage = coverage;
}
