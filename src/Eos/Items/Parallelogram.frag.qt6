#version 310 es
// Copyright (c) 2013-2021 LG Electronics, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// SPDX-License-Identifier: Apache-2.0

precision highp float;

layout(location = 0) out vec4 fragmentColor;
layout(location = 0) in highp vec2 qt_TexCoord0;

layout(std140, binding = 0) uniform buf
{
    mat4 qt_Matrix;
    float qt_Opacity;
    highp vec4 color;
    highp float blur;
};

void main(void) {
    highp float blurR = 1.0 - blur;
    highp float x = qt_TexCoord0.x;
    if (x >= 0.0 && x <= blur) {
        fragmentColor = color * smoothstep(0.0, blur, x) * qt_Opacity;
    } else if (x >= blurR && x <= 1.0) {
        fragmentColor = color * (1.0 - smoothstep(blurR, 1.0, x)) * qt_Opacity;
    } else {
        fragmentColor = color * qt_Opacity;
    }
}
